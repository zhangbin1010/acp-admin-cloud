server:
  tomcat:
    max-threads: 1000
    uri-encoding: UTF-8
spring:
  profiles:
    active: dev
  application:
    name: log-server
  thymeleaf:
    cache: false
  zipkin:
    sender:
      type: kafka
  cloud:
    config:
      name: ${spring.application.name}     #对应{application}部分
      profile: ${spring.profiles.active}   #对应{profile}部分
      label: master                        #对应分支。如果配置中心使用的是本地存储，则该参数无用
      discovery:
        service-id: config-server          #指定配置中心的service-id，便于扩展为高可用配置集群。
        enabled: true
      fail-fast: true
      retry:
        initial-interval: 2000 #最初重试间隔
        max-attempts: 1000 #最多重试次数
        max-interval: 5000 #最长重试间隔
        multiplier: 1.1 #每次重试失败后，重试间隔所增加的倍数
info:
  version: 4.0.0
  app-name: ${spring.application.name}
  tags:
    environment: ${spring.profiles.active}
  build:
    author: zhangbin
    active: ${spring.profiles.active}
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
# ===============================
# = Eureka Config
# ===============================
eureka:
  instance:
    prefer-ip-address: true
    # 服务刷新时间配置，每隔这个时间会主动心跳一次，默认30s
    lease-renewal-interval-in-seconds: 3
    # 服务过期时间配置,超过这个时间没有接收到心跳EurekaServer就会将这个实例剔除
    # EurekaServer一定要设置eureka.server.eviction-interval-timer-in-ms否则这个配置无效
    # 这个配置一般为服务刷新时间配置的三倍，默认90s
    lease-expiration-duration-in-seconds: 9
  client:
    # 定时刷新本地缓存时间
    registry-fetch-interval-seconds: 3
    service-url:
      defaultZone: http://127.0.0.1:8761/eureka/
# ===============================
# = Ribbon Config
# ===============================
feign:
  httpclient:
    enabled: false
    connection-timeout: ${feign.client.config.default.connectTimeout}
    max-connections: 1000
    time-to-live: 900
    time-to-live-unit: seconds
    follow-redirects: true
  okhttp:
    enabled: true
  hystrix:
    enabled: true
  client:
    config:
      default:
        connectTimeout: 10000
        readTimeout: 10000
        loggerLevel: full
      oauth2-server:
        connectTimeout: 30000
        readTimeout: 30000
hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 11000
    "OauthServer#appInfo(String)":
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 31000
    "OauthServer#tokenInfo(String)":
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 31000
ribbon:
  # ribbon 缓存刷新时间
  ServerListRefreshInterval: 3000
  ReadTimeout: ${hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds}
  ConnectTimeout: ${hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds}
  okhttp:
    enabled: true
  eager-load:
    enabled: true
    clients: oauth2-server
# ===============================
# = Log To File Config
# ===============================
# 本地IDE中启动时需注释 logging.config 配置，部署至服务器时需放开注释
#logging:
#  config: logback-spring.xml
# ===============================
# = Security Config
# ===============================
security:
  oauth2:
    resource:
      token-info-uri: http://oauth2-server/oauth/check_token
acp:
  cloud:
    log-server:
      enabled: true