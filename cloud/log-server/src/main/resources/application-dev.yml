debug: false
server:
  address: 127.0.0.1
  port: 8780
management:
  server:
    port: 8779
# ===============================
# = Log To File Config
# ===============================
logging:
  path: logs/log-server
  pattern:
    file: '[%date{yyyy-MM-dd HH:mm:ss.SSS}] [ %-5level] [%thread] %logger{96} [%X{lineno}] - %msg%n'
  file: ${logging.path}/${spring.application.name}.log
logging.file.max-size: 5MB
logging.file.max-history: 30
# ===============================
# = Eureka Config
# ===============================
eureka:
  instance:
    ip-address: ${server.address}
    instance-id: ${spring.application.name}:${server.address}:${server.port}:v${info.version}:${spring.profiles.active}
info:
  instance-id: ${eureka.instance.instance-id}
# ===============================
# = Spring Config
# ===============================
spring:
  redis:
    url: redis://127.0.0.1:6379
  cloud:
    bus:
      id: ${eureka.instance.instance-id}
    stream:
      default-binder: kafka
      kafka:
        binder:
          brokers: 127.0.0.1:9092
          # 0代表：不进行消息接收是否成功的确认(默认值)；
          # 1代表：当Leader副本接收成功后，返回接收成功确认信息；
          # -1代表：当Leader和Follower副本都接收成功后，返回接收成功确认信息；
          required-acks: -1
# ===============================
# = Security Config
# ===============================
security:
  oauth2:
    client:
      client-id: 8a80cb816c0a5d4f016c0a5e0c020000
      client-secret: 2523342F2BD345EA9658452A289364AA
acp:
  swagger:
    enabled: true
  schedule:
    cron:
      LogFileBackUpTask: 0 0/1 * * * ?