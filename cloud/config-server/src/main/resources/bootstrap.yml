server:
  address: 127.0.0.1
  port: 8769
  tomcat:
    max-threads: 1000
    uri-encoding: UTF-8
info:
  version: 1.2.0
  app-name: ${spring.application.name}
  tags:
    environment: ${spring.profiles.active}
  build:
    author: zhangbin
    active: ${spring.profiles.active}
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
# ===============================
# = Eureka Config
# ===============================
eureka:
  instance:
    prefer-ip-address: true
    lease-renewal-interval-in-seconds: 5
    lease-expiration-duration-in-seconds: 15
    ip-address: ${server.address}
    instance-id: ${spring.application.name}(${server.address}:${server.port}):v${info.version}:${spring.profiles.active}
  client:
    registry-fetch-interval-seconds: 5
    service-url:
      defaultZone: http://127.0.0.1:8761/eureka/
# ===============================
# = Log To File Config
# ===============================
logging:
  path: logs/config-server
  pattern:
    file: '[%date{yyyy-MM-dd HH:mm:ss.SSS}] [ %-5level] [%thread] %logger{96} [%X{lineno}] - %msg%n'
  file:
    max-size: 5MB
    max-history: 30
spring:
  profiles:
    active: jdbc
  application:
    name: config-server
  thymeleaf:
    cache: false
  jackson:
    property-naming-strategy: SNAKE_CASE
    default-property-inclusion: non_null
  zipkin:
    sender:
      type: kafka
  sleuth:
    sampler:
      probability: 1 #样本采集量，默认为0.1，为了测试这里修改为1，正式环境一般使用默认值。
  cloud:
    config:
      server:
        jdbc:
          sql: "SELECT config_KEY, config_VALUE from t_properties where config_APPLICATION=? and config_PROFILE=? and config_LABEL=? and enabled=1"
    stream:
      kafka:
        binder:
          brokers: 127.0.0.1:9092
  # ===============================
  # = DATA SOURCE
  # ===============================
  datasource:
    url: jdbc:mysql://127.0.0.1:3306/acp-admin?autoReconnect=true&failOverReadOnly=false&serverTimezone=UTC&useSSL=false
    username: root
    password: test
    driver-class-name: com.mysql.cj.jdbc.Driver
# ===============================
# = Security Config
# ===============================
security:
  oauth2:
    client:
      client-id: dbd1458a-19fb-11e9-894e-d8c49792dd7b
      client-secret: E0D3024D-9A22-41EE-AC0F-FC6B56E367AE
    resource:
      token-info-uri: http://oauth2-server/oauth/check_token
# ===============================
# = ACP Config
# ===============================
acp:
  cloud:
    oauth:
      resource-server: false
    log-server:
      enabled: false