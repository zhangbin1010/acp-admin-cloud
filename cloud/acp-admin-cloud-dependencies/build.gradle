group "${group}.cloud"
buildscript {
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:$versions.spring_boot")
    }
}
apply plugin: "io.spring.dependency-management"
dependencyManagement {
    imports {
        mavenBom("org.springframework.boot:spring-boot-dependencies:$versions.spring_boot") {
            bomProperty("kotlin.version", "${kotlinVersion}")
        }
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:$versions.spring_cloud"
        mavenBom "com.alibaba.cloud:spring-cloud-alibaba-dependencies:$versions.alibaba_cloud"
    }
}
dependencies {
    kapt "org.springframework.boot:spring-boot-configuration-processor"
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    api fileTree(dir: "$rootDir/libs", include: "*.jar")

    api "joda-time:joda-time:$versions.joda_time"
    api "org.apache.commons:commons-text:$versions.commons_text"
    api "org.apache.commons:commons-lang3:$versions.commons_lang3"
    api "org.slf4j:slf4j-api:$versions.slf4j"
    api "ch.qos.logback:logback-classic:$versions.logback"
    api "com.fasterxml.jackson.core:jackson-databind:$versions.jackson_databind"
    api "com.fasterxml.jackson.module:jackson-module-kotlin:$versions.jackson_databind"
    api "org.bouncycastle:bcmail-jdk15on:$versions.bouncycastle"
    api "org.bouncycastle:bcprov-ext-jdk15on:$versions.bouncycastle"
    api "com.thoughtworks.xstream:xstream:$versions.xstream"
    api "dom4j:dom4j:$versions.dom4j"
    api "net.lingala.zip4j:zip4j:$versions.zip4j"

    // sql data base connection
    api "com.zaxxer:HikariCP:$versions.hikaricp"
    api "mysql:mysql-connector-java:$versions.mysql"
    api "com.microsoft.sqlserver:mssql-jdbc:$versions.mssqljdbc"
    api "com.hynnet:oracle-driver-ojdbc:$versions.ojdbc"
    api "org.postgresql:postgresql:$versions.postgresql"

    // tcp/udp
    api "io.netty:netty-all:$versions.netty"

    // http client
    api "com.squareup.okhttp3:okhttp:$versions.okhttp"

    api "org.springframework.boot:spring-boot-starter-web"
    api "org.springframework.boot:spring-boot-starter-actuator"
    api "org.springframework.boot:spring-boot-starter-aop"

    // Swagger2
    api "io.springfox:springfox-swagger2:$versions.swagger"
    api "io.springfox:springfox-swagger-ui:$versions.swagger"

    // log collection
    api "org.jolokia:jolokia-core"

    api "org.springframework.cloud:spring-cloud-starter-oauth2"
    api "org.springframework.cloud:spring-cloud-starter-stream-kafka"
    api "org.springframework.cloud:spring-cloud-starter-bus-kafka"
    // monitor : 服务间调用、断路器、链路追踪
    api "org.springframework.cloud:spring-cloud-starter-openfeign"
    api "org.springframework.cloud:spring-cloud-starter-loadbalancer"
//    api "org.springframework.cloud:spring-cloud-starter-zipkin"
    api "io.github.openfeign:feign-okhttp"
    // 服务注册发现
    api "com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-discovery"
    // 配置中心
    api "com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-config"
    api "com.alibaba.cloud:spring-cloud-starter-alibaba-sentinel"
    api "com.alibaba.csp:sentinel-datasource-nacos"

    api "org.springframework.boot:spring-boot-starter-data-jpa"
    api "org.springframework.boot:spring-boot-starter-data-redis"
    // zk 客户端
    api "org.apache.curator:curator-recipes"

    api project(":cloud:acp-admin-cloud-constant")
}