server:
  address: 127.0.0.1
  port: 8875
management:
  server:
    port: 8874
# ===============================
# = Log To File Config
# ===============================
logging:
  file:
    path: logs/workflow-server
    name: ${logging.file.path}/${spring.application.name}.log
    max-size: 5MB
    max-history: 30
  level:
    com.alibaba.nacos.client.naming: warn
# ===============================
# = Spring Config
# ===============================
spring:
  redis:
    url: redis://127.0.0.1:6379
  kafka:
    bootstrap-servers: ${spring.cloud.stream.kafka.binder.brokers}
  servlet:
    multipart:
      max-file-size: 5MB
      max-request-size: 10MB
  cloud:
    nacos:
      discovery:
        ip: ${server.address}
    bus:
      id: ${spring.application.name}:${server.address}:${server.port}:v${info.version}:${spring.profiles.active}
    stream:
      default-binder: kafka
      kafka:
        binder:
          brokers: 127.0.0.1:9092
          # 0代表：不进行消息接收是否成功的确认(默认值)；
          # 1代表：当Leader副本接收成功后，返回接收成功确认信息；
          # -1代表：当Leader和Follower副本都接收成功后，返回接收成功确认信息；
          required-acks: -1
  # ===============================
  # = JPA / HIBERNATE
  # ===============================
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
      naming:
        implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
  # ===============================
  # = DATA SOURCE
  # ===============================
  datasource:
    url: jdbc:mysql://127.0.0.1:3306/acp-admin-flowable?characterEncoding=utf-8&autoReconnect=true&failOverReadOnly=false&serverTimezone=UTC&useSSL=false
    username: root
    password: test
    driver-class-name: com.mysql.cj.jdbc.Driver
  data:
    jpa:
      repositories:
        bootstrap-mode: deferred
# ===============================
# = Security Config
# ===============================
security:
  oauth2:
    client:
      client-id: 8a80cb816d2eb97f016d2eba04710000
      client-secret: 2523342F2BD345EA9658452A289364AA
acp:
  swagger:
    enabled: true
  cloud:
    zookeeper:
      connect: 127.0.0.1:2181