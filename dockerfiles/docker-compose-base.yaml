version: "3.1"
services:

  redis:
    image: redis
    container_name: redis
    restart: always
    ports:
      - 6379:6379
    networks:
      - elk
  #    command: redis-server --requirepass ${pwd} --notify-keyspace-events Eglx

  zookeeper:
    image: zookeeper
    hostname: zookeeper
    container_name: zookeeper
    restart: always
    networks:
      - elk
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=0.0.0.0:2888:3888;2181

  kafka-manager:
    image: sheepkiller/kafka-manager
    restart: always
    networks:
      - elk
    environment:
      ZK_HOSTS: zookeeper:2181
    ports:
      - "9000:9000"
    expose:
      - 9000
    depends_on:
      - zookeeper

  ########################################################################################################################
  ## 以下是可选监控组建，暂时注释，本地资源不够了，具备条件调试时打开
  elasticsearch:
    image: elasticsearch:7.2.0
    container_name: elasticsearch
    hostname: elasticsearch
    restart: always
    networks:
      - elk
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      - TZ='Asia/Shanghai'
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./es1/elasticsearch/data:/usr/share/elasticsearch/data
      - ./es1/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml

  kibana:
    image: kibana:7.2.0
    container_name: kibana
    restart: always
    networks:
      - elk
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
    depends_on:
      - elasticsearch

  logstash:
    image: logstash:7.2.0
    container_name: logstash
    restart: always
    networks:
      - elk
    ports:
      - "9601:9601"
    volumes:
      - ./logstash/config-dir:/config-dir
    command: logstash -f /config-dir
    environment:
      XPACK_MONITORING_ENABLED: "true"
      XPACK_MONITORING_ELASTICSEARCH_URL: http://elasticsearch:9200
    depends_on:
      - elasticsearch

  zoonavigator-api:
    image: docker.io/elkozmon/zoonavigator-api
    environment:
      SERVER_HTTP_PORT: 9005
    networks:
      - elk
    restart: unless-stopped
    depends_on:
      - zookeeper

  zoonavigator-web:
    image: docker.io/elkozmon/zoonavigator-web
    ports:
      - "8004:8000"
    networks:
      - elk
    environment:
      API_HOST: "zoonavigator-api"
      API_PORT: 9005
    restart: unless-stopped
    links:
      - zoonavigator-api
    depends_on:
      - zoonavigator-api

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    networks:
      - elk
    ports:
      - 9090:9090
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana
    container_name: grafana
    networks:
      - elk
    ports:
      - 3000:3000
    depends_on:
      - prometheus
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin

  setup_grafana_datasource:
    image: appropriate/curl
    container_name: setup_grafana_datasource
    networks:
      - elk
    depends_on:
      - grafana
    volumes:
      - ./prometheus/create-datasource-and-dashboard.sh:/create.sh:ro
    command: /create.sh
networks:
  elk: